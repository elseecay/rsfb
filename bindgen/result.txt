void status_wrapper_clear_exception(StatusWrapper* self)
{
	return self->clearException();
}
void status_wrapper_dispose(StatusWrapper* self)
{
	return self->dispose();
}
void status_wrapper_init(StatusWrapper* self)
{
	return self->init();
}
unsigned status_wrapper_get_state(const StatusWrapper* self)
{
	return self->getState();
}
void status_wrapper_set_errors2(StatusWrapper* self, unsigned length, const intptr_t* value)
{
	return self->setErrors2(length, value);
}
void status_wrapper_set_warnings2(StatusWrapper* self, unsigned length, const intptr_t* value)
{
	return self->setWarnings2(length, value);
}
void status_wrapper_set_errors(StatusWrapper* self, const intptr_t* value)
{
	return self->setErrors(value);
}
void status_wrapper_set_warnings(StatusWrapper* self, const intptr_t* value)
{
	return self->setWarnings(value);
}
const intptr_t* status_wrapper_get_errors(const StatusWrapper* self)
{
	return self->getErrors();
}
const intptr_t* status_wrapper_get_warnings(const StatusWrapper* self)
{
	return self->getWarnings();
}
IStatus* status_wrapper_clone(const StatusWrapper* self)
{
	return self->clone();
}




pub fn status_wrapper_clear_exception(this: StatusWrapperPtr);
pub fn status_wrapper_dispose(this: StatusWrapperPtr);
pub fn status_wrapper_init(this: StatusWrapperPtr);
pub fn status_wrapper_get_state(this: StatusWrapperCPtr) -> UInt;
pub fn status_wrapper_set_errors2(this: StatusWrapperPtr, length: UInt, value: CPtr<IntPtr>);
pub fn status_wrapper_set_warnings2(this: StatusWrapperPtr, length: UInt, value: CPtr<IntPtr>);
pub fn status_wrapper_set_errors(this: StatusWrapperPtr, value: CPtr<IntPtr>);
pub fn status_wrapper_set_warnings(this: StatusWrapperPtr, value: CPtr<IntPtr>);
pub fn status_wrapper_get_errors(this: StatusWrapperCPtr) -> CPtr<IntPtr>;
pub fn status_wrapper_get_warnings(this: StatusWrapperCPtr) -> CPtr<IntPtr>;
pub fn status_wrapper_clone(this: StatusWrapperCPtr) -> StatusPtr;




fn clear_exception(&self)
{
	unsafe { return status_wrapper_clear_exception(self.get_this()); }
}
fn dispose(&self)
{
	unsafe { return status_wrapper_dispose(self.get_this()); }
}
fn init(&self)
{
	unsafe { return status_wrapper_init(self.get_this()); }
}
fn get_state(&self) -> UInt
{
	unsafe { return status_wrapper_get_state(self.get_cthis()); }
}
fn set_errors2(&self, length: UInt, value: CPtr<IntPtr>)
{
	unsafe { return status_wrapper_set_errors2(self.get_this(), length, value); }
}
fn set_warnings2(&self, length: UInt, value: CPtr<IntPtr>)
{
	unsafe { return status_wrapper_set_warnings2(self.get_this(), length, value); }
}
fn set_errors(&self, value: CPtr<IntPtr>)
{
	unsafe { return status_wrapper_set_errors(self.get_this(), value); }
}
fn set_warnings(&self, value: CPtr<IntPtr>)
{
	unsafe { return status_wrapper_set_warnings(self.get_this(), value); }
}
fn get_errors(&self) -> CPtr<IntPtr>
{
	unsafe { return status_wrapper_get_errors(self.get_cthis()); }
}
fn get_warnings(&self) -> CPtr<IntPtr>
{
	unsafe { return status_wrapper_get_warnings(self.get_cthis()); }
}
fn clone(&self) -> Status
{
	unsafe { return Status{ this: status_wrapper_clone(self.get_cthis()) }; }
}
